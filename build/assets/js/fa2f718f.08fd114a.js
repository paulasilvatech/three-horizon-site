"use strict";(self.webpackChunkthree_horizons_docusaurus=self.webpackChunkthree_horizons_docusaurus||[]).push([[186],{4973:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"phase2-platform","title":"Phase 2: Platform Installation","description":"Now let\'s install the core platform components: Azure Kubernetes Service (AKS) or Azure Red Hat OpenShift (ARO).","source":"@site/docs/phase2-platform.md","sourceDirName":".","slug":"/phase2-platform","permalink":"/three-horizon-site/docs/phase2-platform","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Phase 1: Infrastructure Provisioning","permalink":"/three-horizon-site/docs/phase1-infrastructure"},"next":{"title":"Phase 3: Developer Hub Deployment","permalink":"/three-horizon-site/docs/phase3-devhub"}}');var o=r(4848),s=r(8453);const a={sidebar_position:3},i="Phase 2: Platform Installation",l={},c=[{value:"Implementation Options",id:"implementation-options",level:2},{value:"Option A: AKS Installation",id:"option-a-aks-installation",level:2},{value:"Step 2.A.1: Create AKS Cluster",id:"step-2a1-create-aks-cluster",level:3},{value:"Step 2.A.2: Connect to AKS Cluster",id:"step-2a2-connect-to-aks-cluster",level:3},{value:"Step 2.A.3: Configure Workload Identity",id:"step-2a3-configure-workload-identity",level:3},{value:"Option B: ARO Installation",id:"option-b-aro-installation",level:2},{value:"Step 2.B.1: Create ARO Cluster",id:"step-2b1-create-aro-cluster",level:3},{value:"Step 2.B.2: Connect to ARO Cluster",id:"step-2b2-connect-to-aro-cluster",level:3},{value:"Step 2.3: Configure RBAC",id:"step-23-configure-rbac",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"phase-2-platform-installation",children:"Phase 2: Platform Installation"})}),"\n",(0,o.jsx)(n.p,{children:"Now let's install the core platform components: Azure Kubernetes Service (AKS) or Azure Red Hat OpenShift (ARO)."}),"\n",(0,o.jsx)(n.h2,{id:"implementation-options",children:"Implementation Options"}),"\n",(0,o.jsx)(n.p,{children:"You can choose between AKS or ARO based on your organization's requirements. Follow the appropriate option below."}),"\n",(0,o.jsx)(n.h2,{id:"option-a-aks-installation",children:"Option A: AKS Installation"}),"\n",(0,o.jsx)(n.h3,{id:"step-2a1-create-aks-cluster",children:"Step 2.A.1: Create AKS Cluster"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Create AKS cluster with modern features\naz aks create \\\n  --resource-group three-horizons-platform \\\n  --name three-horizons-aks \\\n  --node-count 3 \\\n  --enable-managed-identity \\\n  --enable-workload-identity \\\n  --enable-oidc-issuer \\\n  --enable-addons monitoring \\\n  --network-plugin azure \\\n  --network-plugin-mode overlay \\\n  --vnet-subnet-id $(az network vnet subnet show --resource-group three-horizons-platform --vnet-name three-horizons-vnet --name aks-subnet --query id -o tsv) \\\n  --docker-bridge-address 172.17.0.1/16 \\\n  --dns-service-ip 10.2.0.10 \\\n  --service-cidr 10.2.0.0/24 \\\n  --node-vm-size Standard_D4s_v3 \\\n  --kubernetes-version 1.28.3 \\\n  --tags Environment=Production Project=ThreeHorizons \\\n  --generate-ssh-keys\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-2a2-connect-to-aks-cluster",children:"Step 2.A.2: Connect to AKS Cluster"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Get credentials\naz aks get-credentials \\\n  --resource-group three-horizons-platform \\\n  --name three-horizons-aks\n\n# Verify connection\nkubectl get nodes\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-2a3-configure-workload-identity",children:"Step 2.A.3: Configure Workload Identity"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Get AKS OIDC issuer URL\nAKS_OIDC_ISSUER="$(az aks show -n three-horizons-aks -g three-horizons-platform --query "oidcIssuerProfile.issuerUrl" -o tsv)"\n\n# Create a Kubernetes service account and establish federated identity\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  annotations:\n    azure.workload.identity/client-id: $IDENTITY_CLIENT_ID\n  name: workload-identity-sa\n  namespace: default\nEOF\n\n# Create federated identity credential\naz identity federated-credential create \\\n  --name three-horizons-federated-credential \\\n  --identity-name three-horizons-identity \\\n  --resource-group three-horizons-shared \\\n  --issuer $AKS_OIDC_ISSUER \\\n  --subject system:serviceaccount:default:workload-identity-sa\n'})}),"\n",(0,o.jsx)(n.admonition,{title:"LEARN MORE",type:"info",children:(0,o.jsxs)(n.p,{children:["Review our ",(0,o.jsx)(n.a,{href:"./architecture",children:"AKS architecture documentation"})," for details on how AKS fits into the Three Horizons architecture and ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/aks/workload-identity-overview",children:"Azure Workload Identity documentation"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"option-b-aro-installation",children:"Option B: ARO Installation"}),"\n",(0,o.jsx)(n.h3,{id:"step-2b1-create-aro-cluster",children:"Step 2.B.1: Create ARO Cluster"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Register required resource providers\naz provider register --namespace Microsoft.RedHatOpenShift --wait\naz provider register --namespace Microsoft.Compute --wait\naz provider register --namespace Microsoft.Storage --wait\naz provider register --namespace Microsoft.Authorization --wait\n\n# Create master and worker subnets\naz network vnet subnet create \\\n  --resource-group three-horizons-platform \\\n  --vnet-name three-horizons-vnet \\\n  --name aro-master-subnet \\\n  --address-prefixes 10.0.8.0/23 \\\n  --service-endpoints Microsoft.ContainerRegistry\n\naz network vnet subnet create \\\n  --resource-group three-horizons-platform \\\n  --vnet-name three-horizons-vnet \\\n  --name aro-worker-subnet \\\n  --address-prefixes 10.0.10.0/23 \\\n  --service-endpoints Microsoft.ContainerRegistry\n\n# Update subnet for Azure CNI networking\naz network vnet subnet update \\\n  --name aro-master-subnet \\\n  --resource-group three-horizons-platform \\\n  --vnet-name three-horizons-vnet \\\n  --private-link-service-network-policies Disabled\n\n# Create ARO cluster with current OpenShift version\naz aro create \\\n  --resource-group three-horizons-platform \\\n  --name three-horizons-aro \\\n  --vnet three-horizons-vnet \\\n  --master-subnet aro-master-subnet \\\n  --worker-subnet aro-worker-subnet \\\n  --apiserver-visibility Public \\\n  --ingress-visibility Public \\\n  --pull-secret @pull-secret.txt \\\n  --worker-count 3 \\\n  --worker-vm-size Standard_D4s_v3 \\\n  --tags Environment=Production Project=ThreeHorizons\n"})}),"\n",(0,o.jsx)(n.h3,{id:"step-2b2-connect-to-aro-cluster",children:"Step 2.B.2: Connect to ARO Cluster"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Get the console URL\naz aro show \\\n  --name three-horizons-aro \\\n  --resource-group three-horizons-platform \\\n  --query consoleProfile.url -o tsv\n\n# Get the API server URL\naz aro show \\\n  --name three-horizons-aro \\\n  --resource-group three-horizons-platform \\\n  --query apiserverProfile.url -o tsv\n\n# Get login credentials\naz aro list-credentials \\\n  --name three-horizons-aro \\\n  --resource-group three-horizons-platform\n\n# Login with oc CLI (substitute with your actual API URL from above)\noc login "$(az aro show --name three-horizons-aro --resource-group three-horizons-platform --query apiserverProfile.url -o tsv)" -u kubeadmin -p "<password-from-previous-command>" --insecure-skip-tls-verify=true\n\n# Verify connection\noc get nodes\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["The ARO console URL will open the web UI. Use the kubeadmin credentials to log in. For production environments, configure Microsoft Entra ID integration for authentication. See ",(0,o.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/openshift/configure-azure-ad-ui",children:"ARO Azure AD integration"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"step-23-configure-rbac",children:"Step 2.3: Configure RBAC"}),"\n",(0,o.jsx)(n.p,{children:"Set up role-based access control for your cluster:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Create namespace for platform components\nkubectl create namespace three-horizons-system\n\n# Apply RBAC configuration\nkubectl apply -f - <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: platform-admin\n  namespace: three-horizons-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: platform-admin\nsubjects:\n- kind: ServiceAccount\n  name: platform-admin\n  namespace: three-horizons-system\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\nEOF\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);