"use strict";(self.webpackChunkthree_horizons_docusaurus=self.webpackChunkthree_horizons_docusaurus||[]).push([[638],{2146:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"phase3-devhub","title":"Phase 3: Developer Hub Deployment","description":"Now let\'s deploy the Red Hat Developer Hub (RHDH) version 1.5, which is the central component for the Three Horizons Platform.","source":"@site/docs/phase3-devhub.md","sourceDirName":".","slug":"/phase3-devhub","permalink":"/three-horizon-site/docs/phase3-devhub","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Phase 2: Platform Installation","permalink":"/three-horizon-site/docs/phase2-platform"},"next":{"title":"Phase 4: GitHub Integration","permalink":"/three-horizon-site/docs/phase4-github"}}');var t=r(4848),s=r(8453);const o={sidebar_position:4},i="Phase 3: Developer Hub Deployment",l={},d=[{value:"Step 3.1: Install Operator Lifecycle Manager",id:"step-31-install-operator-lifecycle-manager",level:2},{value:"Step 3.2: Install Developer Hub Operator",id:"step-32-install-developer-hub-operator",level:2},{value:"RHDH 1.5 Key Features",id:"rhdh-15-key-features",level:2},{value:"Step 3.3: Configure Managed Database",id:"step-33-configure-managed-database",level:2},{value:"Step 3.4: Deploy Developer Hub Instance",id:"step-34-deploy-developer-hub-instance",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"phase-3-developer-hub-deployment",children:"Phase 3: Developer Hub Deployment"})}),"\n",(0,t.jsx)(n.p,{children:"Now let's deploy the Red Hat Developer Hub (RHDH) version 1.5, which is the central component for the Three Horizons Platform."}),"\n",(0,t.jsx)(n.h2,{id:"step-31-install-operator-lifecycle-manager",children:"Step 3.1: Install Operator Lifecycle Manager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# For AKS\ncurl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.26.0/install.sh | bash -s v0.26.0\n\n# For ARO, OLM is already installed - verify with:\noc get pods -n openshift-operator-lifecycle-manager\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-32-install-developer-hub-operator",children:"Step 3.2: Install Developer Hub Operator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create namespace\nkubectl create namespace developer-hub\n\n# For AKS: Install OLM Catalog Sources for Red Hat Operators\ncat <<EOF | kubectl apply -f -\napiVersion: operators.coreos.com/v1alpha1\nkind: CatalogSource\nmetadata:\n  name: redhat-operators\n  namespace: olm\nspec:\n  displayName: Red Hat Operators\n  publisher: Red Hat\n  sourceType: grpc\n  image: registry.redhat.io/redhat/redhat-operator-index:v4.13\n  updateStrategy:\n    registryPoll:\n      interval: 30m\nEOF\n\n# Create OperatorGroup\ncat <<EOF | kubectl apply -f -\napiVersion: operators.coreos.com/v1\nkind: OperatorGroup\nmetadata:\n  name: developer-hub-operatorgroup\n  namespace: developer-hub\nspec: {}\nEOF\n\n# Deploy Developer Hub Operator v1.5\ncat <<EOF | kubectl apply -f -\napiVersion: operators.coreos.com/v1alpha1\nkind: Subscription\nmetadata:\n  name: rhdh-operator\n  namespace: developer-hub\nspec:\n  channel: fast-1.5\n  name: rhdh\n  source: redhat-operators\n  sourceNamespace: openshift-marketplace\nEOF\n\n# For ARO, OLM is already installed so you only need to create the OperatorGroup and Subscription\n# Wait for the operator to be installed\nkubectl wait --for=condition=ready pod -l app=rhdh-operator -n developer-hub --timeout=300s\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:'For ARO/OpenShift clusters, the Operator Lifecycle Manager (OLM) is already installed. You only need to create the OperatorGroup and Subscription. The correct channel for RHDH 1.5 is "fast-1.5".'}),(0,t.jsxs)(n.p,{children:["For detailed operator configuration, see the ",(0,t.jsx)(n.a,{href:"https://developers.redhat.com/rhdh/1.5/getting_started",children:"Red Hat Developer Hub documentation"}),"."]})]}),"\n",(0,t.jsx)(n.h2,{id:"rhdh-15-key-features",children:"RHDH 1.5 Key Features"}),"\n",(0,t.jsx)(n.p,{children:"Red Hat Developer Hub 1.5 introduces several important enhancements and features:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Plugins Architecture"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Plugin loading without container rebuilds"}),"\n",(0,t.jsx)(n.li,{children:"Hot-swappable plugins for runtime customization"}),"\n",(0,t.jsx)(n.li,{children:"Simplified plugin management through Kubernetes resources"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Enhanced Software Catalog"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Improved component discovery"}),"\n",(0,t.jsx)(n.li,{children:"Automatic relationship mapping"}),"\n",(0,t.jsx)(n.li,{children:"Advanced filtering and search capabilities"}),"\n",(0,t.jsx)(n.li,{children:"Extended metadata support"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Template Improvements"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Template parameters validation"}),"\n",(0,t.jsx)(n.li,{children:"Conditional template steps"}),"\n",(0,t.jsx)(n.li,{children:"Enhanced template authoring experience"}),"\n",(0,t.jsx)(n.li,{children:"Output preview capabilities"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Integration Improvements"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Native OpenShift integration"}),"\n",(0,t.jsx)(n.li,{children:"Enhanced Kubernetes resource visualization"}),"\n",(0,t.jsx)(n.li,{children:"Improved CI/CD integration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-33-configure-managed-database",children:"Step 3.3: Configure Managed Database"}),"\n",(0,t.jsx)(n.p,{children:"For production environments, we recommend using a managed database service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Generate a unique timestamp for the server name to avoid naming conflicts\nTIMESTAMP=$(date +"%m%d%H%M")\nDB_SERVER_NAME="backstagedb-${TIMESTAMP}"\n\n# Create Azure Database for PostgreSQL flexible server\n# Run these commands one at a time to avoid issues with multiline commands\naz postgres flexible-server create \\\n  --resource-group three-horizons-shared \\\n  --name ${DB_SERVER_NAME} \\\n  --admin-user backstage \\\n  --admin-password "StrongPassword123!" \\\n  --sku-name Standard_D2s_v3 \\\n  --tier GeneralPurpose \\\n  --storage-size 32 \\\n  --version 14 \\\n  --high-availability ZoneRedundant \\\n  --location centralus \\\n  --database-name backstage \\\n  --tags Environment=Production Project=ThreeHorizons\n\n# Configure firewall rule to allow Azure services\naz postgres flexible-server firewall-rule create \\\n  --resource-group three-horizons-shared \\\n  --name ${DB_SERVER_NAME} \\\n  --rule-name AllowAzureServices \\\n  --start-ip-address 0.0.0.0 \\\n  --end-ip-address 0.0.0.0\n\n# Store database credentials in Key Vault (ensure KEY_VAULT_NAME is set correctly)\naz keyvault secret set \\\n  --name db-password \\\n  --vault-name "$KEY_VAULT_NAME" \\\n  --value "StrongPassword123!"\n\n# Get the database host and store it in a variable\nDB_HOST=$(az postgres flexible-server show \\\n  --resource-group three-horizons-shared \\\n  --name ${DB_SERVER_NAME} \\\n  --query fullyQualifiedDomainName \\\n  --output tsv)\n\n# Create Kubernetes secret for database connection\nkubectl create secret generic developer-hub-postgres \\\n  --namespace developer-hub \\\n  --from-literal=postgres-password="StrongPassword123!"\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"For production, use a more secure method to manage passwords, such as retrieving them from Key Vault using managed identities."})}),"\n",(0,t.jsx)(n.h2,{id:"step-34-deploy-developer-hub-instance",children:"Step 3.4: Deploy Developer Hub Instance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Deploy Red Hat Developer Hub instance v1.5\nkubectl apply -f - <<EOF\napiVersion: rhdh.redhat.com/v1alpha1\nkind: Backstage\nmetadata:\n  name: developer-hub\n  namespace: developer-hub\nspec:\n  application:\n    replicas: 2\n    resources:\n      requests:\n        cpu: "1"\n        memory: "2Gi"\n      limits:\n        cpu: "2"\n        memory: "4Gi"\n  database:\n    host: "${DB_HOST}"\n    port: 5432\n    name: "backstage"\n    user: "backstage"\n    passwordSecret:\n      name: "developer-hub-postgres"\n      key: "postgres-password"\n  rbac:\n    enabled: true\n  extraEnvs:\n    - name: RHDH_CONFIG_APP_CONFIG_app_baseUrl\n      value: "https://devhub.example.com"\n    - name: RHDH_DYNAMIC_PLUGINS_BACKEND_DYNAMIC_PLUGINS\n      value: "true"\nEOF\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var a=r(6540);const t={},s=a.createContext(t);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);